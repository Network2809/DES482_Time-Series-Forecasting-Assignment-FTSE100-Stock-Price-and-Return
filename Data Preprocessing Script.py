# -*- coding: utf-8 -*-
"""tsf_dataPreprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14iThCJk1_Qaw6aj0LS0tl4TDarHDEdTq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import yfinance as yf

# Download Nikkei 225 Data
symbol = "^N225"
start_date = "2000-01-01"
end_date = "2025-05-31"
data = yf.download(symbol, start=start_date, end=end_date)
data.head()

# Keep only closing prices
df = data[["Close"]].copy()
df.rename(columns={"Close": "Price"}, inplace=True)
df.head()

# Calculate daily returns
df["Return"] = df["Price"].pct_change()

# Apply log transformation for variance stabilization
df["LogPrice"] = np.log(df["Price"])
df["LogReturn"] = df["LogPrice"].diff()

# Handle missing values
df.ffill(inplace=True)  # Forward fill
df.dropna(inplace=True)  # Drop any remaining NaNs
df.head()

# Price over time
plt.figure(figsize=(14, 4))
df["Price"].plot(title="Nikkei 225 Closing Price", ylabel="Price", xlabel="Date")
plt.grid(True)
plt.tight_layout()
plt.show()

# Daily returns over time
plt.figure(figsize=(14, 4))
df["Return"].plot(title="Daily Returns", ylabel="Return", xlabel="Date")
plt.grid(True)
plt.tight_layout()
plt.show()

# Log returns over time
plt.figure(figsize=(14, 4))
df["LogReturn"].plot(title="Log Returns", ylabel="Log Return", xlabel="Date")
plt.grid(True)
plt.tight_layout()
plt.show()

# Histogram of returns
plt.figure(figsize=(10, 4))
plt.hist(df["Return"], bins=100, color='steelblue', edgecolor='black')
plt.title("Histogram of Daily Returns")
plt.xlabel("Return")
plt.ylabel("Frequency")
plt.grid(True)
plt.tight_layout()
plt.show()

# Rolling volatility (30-day std of returns)
df["Volatility"] = df["Return"].rolling(window=30).std()

plt.figure(figsize=(14, 4))
df["Volatility"].plot(title="30-Day Rolling Volatility", ylabel="Volatility", xlabel="Date", color='darkorange')
plt.grid(True)
plt.tight_layout()
plt.show()